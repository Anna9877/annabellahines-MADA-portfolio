[
  {
    "objectID": "aboutme.html",
    "href": "aboutme.html",
    "title": "About me",
    "section": "",
    "text": "Background Info:\nMy name is Annabella Hines and I am a first year master of public health(MPH) student with a concentration in epidemiology. I graduated in December 2020 from UGA with my undergraduate degree in Biology with an emphasis in marine sciences. I then worked in a dermatopathology lab for approximately two years before returning to UGA to pursue my MPH this past fall. My main interests are in environmental epidemiology and vector borne diseases, but I’m eager to expand my knowledge in new and unexpected areas. My undergraduate research involved surveying Georgia for an invasive tick species and cataloging specimens and environmental data. Last semester I took the introduction to coding in R course and I have some general experience in STATA and SAS. In this course, my goals are to gain knowledge in Git, hone my skills in R, and become more well versed in the tools available for data analysis.\nQuick Picture…\n\n\n\nI’m legally obligated to throw a peace sign in every photo.\n\n\nFun Facts:\n\nI have shown and competed in dog sports for about 10 years!\nI’m obsessed with musicals of all kinds.\nI love to crochet(but I’m not very good at it yet).\n\nCool/Interesting Video:\nI am a big fan of TEDTalks, so when I came across this one I just had to watch it. Sebastian Wernicke analyzed the data available on the popularity of various talks and breaks down how to formulate the ultimate TEDTalk, from topic to color scheme and everything in between. It is about a decade old, but it is a fun watch and I hope you all found it as interesting as I did!"
  },
  {
    "objectID": "coding_exercise.html",
    "href": "coding_exercise.html",
    "title": "R Coding Exercise",
    "section": "",
    "text": "##Loading and checking data\n##Processing Data\n##Initial Plotting\n##Fit\nInfant mortality and life expectancy are significantly correlated at the 0.05 level but population and life expectancy are not."
  },
  {
    "objectID": "coding_exercise.html#lets-create-a-plot-assessing-the-relationship-between-life-expectancy-and-mortality-in-2000-and-look-at-the-impacted-region",
    "href": "coding_exercise.html#lets-create-a-plot-assessing-the-relationship-between-life-expectancy-and-mortality-in-2000-and-look-at-the-impacted-region",
    "title": "R Coding Exercise",
    "section": "Let’s create a plot assessing the relationship between life expectancy and mortality in 2000 and look at the impacted region",
    "text": "Let’s create a plot assessing the relationship between life expectancy and mortality in 2000 and look at the impacted region\n\nggplot(africa2000, aes(x=infant_mortality, y=life_expectancy, color=region)) +geom_point()"
  },
  {
    "objectID": "coding_exercise.html#lets-run-another-regression-prediction-the-average-life-expectancy-in-each-region",
    "href": "coding_exercise.html#lets-run-another-regression-prediction-the-average-life-expectancy-in-each-region",
    "title": "R Coding Exercise",
    "section": "Let’s run another regression prediction the average life expectancy in each region",
    "text": "Let’s run another regression prediction the average life expectancy in each region\n\nfit3 <- lm(life_expectancy ~ region, data = africa2000)\nsummary(fit3)\n\n\nCall:\nlm(formula = life_expectancy ~ region, data = africa2000)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-16.056  -4.138  -0.500   3.013  17.744 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(>|t|)    \n(Intercept)            53.6563     1.6203  33.115  < 2e-16 ***\nregionMiddle Africa    -0.8562     2.8065  -0.305    0.762    \nregionNorthern Africa  17.4604     3.1026   5.628 1.04e-06 ***\nregionSouthern Africa  -2.1562     3.3206  -0.649    0.519    \nregionWestern Africa    3.1812     2.2915   1.388    0.172    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 6.481 on 46 degrees of freedom\nMultiple R-squared:  0.4601,    Adjusted R-squared:  0.4131 \nF-statistic:   9.8 on 4 and 46 DF,  p-value: 8.074e-06\n\n\nThis shows that there was a significance difference in life expectancy in the Northern Africa region."
  },
  {
    "objectID": "dataanalysis_exercise.html",
    "href": "dataanalysis_exercise.html",
    "title": "Data Analysis Exercise - Botulism",
    "section": "",
    "text": "Introduction\nThis data is from the CDC website at https://data.cdc.gov/Foodborne-Waterborne-and-Related-Diseases/Botulism/66i6-hisz and has counts of confirmed botulism cases in the United States by state, year, type of botulism toxin, and transmission type. I will be cleaning an working with all 5 variables.\nChange to Factors\nBotType and ToxinType are both classified as characters but would be better represented as factors so I will change them.\nRename Columns\nNext, I think the BotType and ToxinType variables can be renamed to be a little clearer.\nCheck for Missing Data\nRemove NAs\nAll the NA entries appear to be in the state column. There are 2280 observations so I decided to just remove the 34 NA values since they don’t make up a large percentage of the data overall.\nSave as RDS file"
  },
  {
    "objectID": "dataanalysis_exercise.html#abbies-work",
    "href": "dataanalysis_exercise.html#abbies-work",
    "title": "Data Analysis Exercise - Botulism",
    "section": "Abbie’s Work",
    "text": "Abbie’s Work\n1: Load in Data\n\nAKbotulism<-readRDS(\"cleanbotulismdata.RData\") #load() the dataset was shooting errors so I renamed it to read it in\nhead(AKbotulism)\n\n# A tibble: 6 × 5\n  State   Year `Transmission Type` `Toxin Type` Count\n  <chr>  <dbl> <fct>               <fct>        <dbl>\n1 Alaska  1947 Foodborne           Unknown          3\n2 Alaska  1948 Foodborne           Unknown          4\n3 Alaska  1950 Foodborne           E                5\n4 Alaska  1952 Foodborne           E                1\n5 Alaska  1956 Foodborne           E                5\n6 Alaska  1959 Foodborne           E               10\n\n\nI’m interested to see how the toxin types and counts varied by year.\nGrouped By State\n\nlibrary(ggplot2)\nggplot()+\n  geom_line(aes(x=Year, y=Count, group = State), data=AKbotulism, alpha = 0.2)+\n  facet_wrap(.~`Toxin Type`) + \n  theme_bw()\n\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n\n\n\n\n\nWell that was confusing, let’s try it grouped by Transmission Type.\nGrouped by Transmission Type\n\nggplot()+\n  geom_line(aes(x=Year, y=Count, group = `Transmission Type`), data=AKbotulism, alpha = 0.2)+\n  facet_wrap(.~`Toxin Type`) + \n  theme_bw()\n\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n`geom_line()`: Each group consists of only one observation.\nℹ Do you need to adjust the group aesthetic?\n\n\n\n\n\nWe can see some better patterns here if we squint really hard, but faceting by toxin type allows for too many options to get a good idea of what is happening within the data. Toxins A, B, E, and Unknown seem to be the most prevelant types, so I want to focus in on them\n\nSubset for specific toxins\n\nABE<-AKbotulism%>%\n  filter(`Toxin Type` %in% c(\"A\", \"B\", \"E\", \"Unknown\"))\n\nLet’s try that again:\nGrouped by Transmission Type\n\nggplot()+\n  geom_line(aes(x=Year, y=Count, group = `Transmission Type`), data=ABE, alpha = 0.35)+\n  facet_wrap(.~`Toxin Type`) + \n  theme_bw()\n\n\n\n\nAwesome, now we can start to see the patterns and the ranges better among the data. It seems that Type A is popular and only continues to grow in prevalence. B seems to as well though on a smaller scale. I’m not really sure what’s going on with E, and the number of unknown seems to be decreasing. This may be because these cases are becoming better identified and may account for some of the increase in A and B types (all right around 1975).\nWhile I grouped by Transmission Type to better see the data, that grouping isn’t telling us much at the moments, so let’s see if there’s any patterns within it.\n\nggplot()+\n  geom_point(aes(x=Year, y=Count, color = `Transmission Type`), data=ABE, alpha = 0.35)+\n  facet_wrap(.~`Toxin Type`) + \n  theme_bw()\n\n\n\n\nThis is pretty cool! Most of the new cases for A and B are transmitted by infants with foodborne transmission nearly dying out overnight. The number of unknown types of foodborne transmission also snuffed out around the same time - I wonder if there was new food safety legislation in place that would explain the mass decrease. However, Type E remains mainly foodborne and pretty constant across time. Also with the drastic increase in infant transmission around when foodborne transmission ended I wonder if the classifications for transmission were changed. There’s no instance of “infant” transmission until 1975.\nI don’t know enough about botulism to provide more commentary, but this posed some interesting questions I’ll keep in mind if this topic arises again."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "My website and data analysis portfolio",
    "section": "",
    "text": "Hello\nWelcome to my website and online portfolio!!\n\nPlease use the Menu Bar above to look around.\nIt’s awesome to meet everyone and let’s have a great semester!"
  },
  {
    "objectID": "tidytuesday_exercise.html",
    "href": "tidytuesday_exercise.html",
    "title": "Tidy Tuesday Exercise",
    "section": "",
    "text": "This data is the TidyTuesday data shared for this week of 2023-02-14. It contains information on the age gaps between actors portraying a romantic relationship in 1155 Hollywood movies. The data can be found through the TidyTuesday github repository at https://github.com/rfordatascience/tidytuesday/tree/master/data/2023/2023-02-14.\n\nLoad Packages\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(lubridate)\n\nLoading required package: timechange\n\nAttaching package: 'lubridate'\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\n\n\nLoad Data\n\ntuesdata <- tidytuesdayR::tt_load('2023-02-14')\n\n--- Compiling #TidyTuesday Information for 2023-02-14 ----\n\n\n--- There is 1 file available ---\n\n\n--- Starting Download ---\n\n\n\n    Downloading file 1 of 1: `age_gaps.csv`\n\n\n--- Download complete ---\n\nage_gaps <- tuesdata$age_gaps\n\n\n\nExplore Data\n\nstr(age_gaps)\n\nspc_tbl_ [1,155 × 13] (S3: spec_tbl_df/tbl_df/tbl/data.frame)\n $ movie_name        : chr [1:1155] \"Harold and Maude\" \"Venus\" \"The Quiet American\" \"The Big Lebowski\" ...\n $ release_year      : num [1:1155] 1971 2006 2002 1998 2010 ...\n $ director          : chr [1:1155] \"Hal Ashby\" \"Roger Michell\" \"Phillip Noyce\" \"Joel Coen\" ...\n $ age_difference    : num [1:1155] 52 50 49 45 43 42 40 39 38 38 ...\n $ couple_number     : num [1:1155] 1 1 1 1 1 1 1 1 1 1 ...\n $ actor_1_name      : chr [1:1155] \"Ruth Gordon\" \"Peter O'Toole\" \"Michael Caine\" \"David Huddleston\" ...\n $ actor_2_name      : chr [1:1155] \"Bud Cort\" \"Jodie Whittaker\" \"Do Thi Hai Yen\" \"Tara Reid\" ...\n $ character_1_gender: chr [1:1155] \"woman\" \"man\" \"man\" \"man\" ...\n $ character_2_gender: chr [1:1155] \"man\" \"woman\" \"woman\" \"woman\" ...\n $ actor_1_birthdate : Date[1:1155], format: \"1896-10-30\" \"1932-08-02\" ...\n $ actor_2_birthdate : Date[1:1155], format: \"1948-03-29\" \"1982-06-03\" ...\n $ actor_1_age       : num [1:1155] 75 74 69 68 81 59 62 69 57 77 ...\n $ actor_2_age       : num [1:1155] 23 24 20 23 38 17 22 30 19 39 ...\n - attr(*, \"spec\")=\n  .. cols(\n  ..   movie_name = col_character(),\n  ..   release_year = col_double(),\n  ..   director = col_character(),\n  ..   age_difference = col_double(),\n  ..   couple_number = col_double(),\n  ..   actor_1_name = col_character(),\n  ..   actor_2_name = col_character(),\n  ..   character_1_gender = col_character(),\n  ..   character_2_gender = col_character(),\n  ..   actor_1_birthdate = col_date(format = \"\"),\n  ..   actor_2_birthdate = col_date(format = \"\"),\n  ..   actor_1_age = col_double(),\n  ..   actor_2_age = col_double()\n  .. )\n - attr(*, \"problems\")=<externalptr> \n\n\n\nsummary(age_gaps)\n\n  movie_name         release_year    director         age_difference \n Length:1155        Min.   :1935   Length:1155        Min.   : 0.00  \n Class :character   1st Qu.:1997   Class :character   1st Qu.: 4.00  \n Mode  :character   Median :2004   Mode  :character   Median : 8.00  \n                    Mean   :2001                      Mean   :10.42  \n                    3rd Qu.:2012                      3rd Qu.:15.00  \n                    Max.   :2022                      Max.   :52.00  \n couple_number   actor_1_name       actor_2_name       character_1_gender\n Min.   :1.000   Length:1155        Length:1155        Length:1155       \n 1st Qu.:1.000   Class :character   Class :character   Class :character  \n Median :1.000   Mode  :character   Mode  :character   Mode  :character  \n Mean   :1.398                                                           \n 3rd Qu.:2.000                                                           \n Max.   :7.000                                                           \n character_2_gender actor_1_birthdate    actor_2_birthdate     actor_1_age   \n Length:1155        Min.   :1889-04-16   Min.   :1906-10-06   Min.   :18.00  \n Class :character   1st Qu.:1953-05-16   1st Qu.:1965-03-25   1st Qu.:33.00  \n Mode  :character   Median :1964-10-03   Median :1974-07-30   Median :39.00  \n                    Mean   :1960-09-07   Mean   :1971-01-29   Mean   :40.64  \n                    3rd Qu.:1973-08-07   3rd Qu.:1982-04-07   3rd Qu.:47.00  \n                    Max.   :1996-06-01   Max.   :1996-11-11   Max.   :81.00  \n  actor_2_age   \n Min.   :17.00  \n 1st Qu.:25.00  \n Median :29.00  \n Mean   :30.21  \n 3rd Qu.:34.00  \n Max.   :68.00  \n\nglimpse(age_gaps)\n\nRows: 1,155\nColumns: 13\n$ movie_name         <chr> \"Harold and Maude\", \"Venus\", \"The Quiet American\", …\n$ release_year       <dbl> 1971, 2006, 2002, 1998, 2010, 1992, 2009, 1999, 199…\n$ director           <chr> \"Hal Ashby\", \"Roger Michell\", \"Phillip Noyce\", \"Joe…\n$ age_difference     <dbl> 52, 50, 49, 45, 43, 42, 40, 39, 38, 38, 36, 36, 35,…\n$ couple_number      <dbl> 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, …\n$ actor_1_name       <chr> \"Ruth Gordon\", \"Peter O'Toole\", \"Michael Caine\", \"D…\n$ actor_2_name       <chr> \"Bud Cort\", \"Jodie Whittaker\", \"Do Thi Hai Yen\", \"T…\n$ character_1_gender <chr> \"woman\", \"man\", \"man\", \"man\", \"man\", \"man\", \"man\", …\n$ character_2_gender <chr> \"man\", \"woman\", \"woman\", \"woman\", \"man\", \"woman\", \"…\n$ actor_1_birthdate  <date> 1896-10-30, 1932-08-02, 1933-03-14, 1930-09-17, 19…\n$ actor_2_birthdate  <date> 1948-03-29, 1982-06-03, 1982-10-01, 1975-11-08, 19…\n$ actor_1_age        <dbl> 75, 74, 69, 68, 81, 59, 62, 69, 57, 77, 59, 56, 65,…\n$ actor_2_age        <dbl> 23, 24, 20, 23, 38, 17, 22, 30, 19, 39, 23, 20, 30,…\n\n\nNext I will check for any missing variables in the dataset.\n\nanyNA(age_gaps)\n\n[1] FALSE\n\n\nThere is no missing data.\nHere I did a basic scatter plot to see the age different by release year.\n\nscatter<- ggplot(age_gaps, aes(x=release_year, y=age_difference, text= paste(movie_name, \"<br>\"))) + geom_point()+\n  labs(title=\"Age Difference by Release Year\")+xlab(\"Release Year\")+ylab(\"Age Difference\")\nscatter\n\n\n\n\nOverall there were more recent movies in the data than older movies, which may partially skew the age gap distributions just from having less data to work from for the pre 1980’s movies. I wanted to try to make the graph interactive with a hover box with the movie title just for practice.\n\nlibrary(plotly)\nggplotly(scatter, tooltip=c(\"text\"))\n\n\n\n\n\n\nI decided to make another graph to see the average age gap each release year to hopefully get more clarity.\n\navg <-age_gaps %>% group_by(release_year) %>% summarize(year_avg = mean(age_difference))\nggplot(avg, aes(x=release_year, y=year_avg))+ geom_line(color=\"dark blue\")+geom_point()+xlab(\"Release Year\")+ylab(\"Average Age Difference\")+labs(title=\"Average Age Difference by Release Year\")\n\n\n\n\nThis graph with the average age differences by year shows that the older movies tended to have a larger age gap on average between the actors.\n\nggplot(age_gaps, aes(x=age_difference))+ geom_bar()+labs(title=\"Frequency of Age Gaps\")+xlab(\"Age Difference in Years\")\n\n\n\n\nFrom this distribution it seems most of the movies had age differences of less than 10 years, with the frequency steadily decreasing the larger the age gap became.\nThe first actor is the older one in the data set, so I decided to look at the age distribution by gender for the older actors and compare it to the younger ones.\n\nbox1<-ggplot(age_gaps, aes(x=character_1_gender, y=actor_1_age))+geom_boxplot(aes(fill=character_1_gender))+\n  xlab(\"Gender\")+ylab(\"Age\")+\n  labs(title=\"Older Actor Age Distribution by Gender\")\nbox1\n\n\n\n\n\nbox2<-ggplot(age_gaps, aes(x=character_2_gender, y=actor_2_age))+geom_boxplot(aes(fill=character_2_gender))+labs(title=\"Younger Actor Age Distribution by Gender\")+xlab(\"Gender\")+ylab(\"Age\")\nbox2\n\n\n\n\nIt seems that for the older actors in the age difference pairs that the men had an older age distribution than the women while it was relatively the same for the younger actors in the pairs. I then want to see if the older actors were typically one gender or the other.\n\nactor1bar<-ggplot(age_gaps, aes(x=character_1_gender))+geom_bar(aes(fill=character_1_gender))+xlab(\"Gender\")+ylab(\"Count\")\nactor1bar\n\n\n\nage_gaps %>% pull(character_1_gender) %>% table()\n\n.\n  man woman \n  941   214 \n\n\nThe bar graph showed that the large majority of the older actors were men so I checked the actual numbers and found out that 941 were men and 214 were women.\n\nactor2bar<-ggplot(age_gaps, aes(x=character_2_gender))+geom_bar(aes(fill=character_2_gender))+xlab(\"Gender\")+ylab(\"Count\")\nactor2bar\n\n\n\nage_gaps %>% pull(character_2_gender) %>% table()\n\n.\n  man woman \n  215   940 \n\n\nThe frequency is reversed for the younger actors with the majority of them being women with 940 women and 215 men. This the made me wonder how many non-heterosexual pairings there were.\n\nmm<- age_gaps %>% filter(character_1_gender==\"man\") %>% filter(character_2_gender==\"man\") %>% count()\nff<- age_gaps %>% filter(character_1_gender==\"woman\") %>% filter(character_2_gender==\"woman\") %>% count()\nmm\n\n# A tibble: 1 × 1\n      n\n  <int>\n1    12\n\nff\n\n# A tibble: 1 × 1\n      n\n  <int>\n1    11\n\n\nThere appears to be 12 movies with both actors being male and 11 with both actors being female.\nI’m now kind of curious about which movie had the largest age gap and also which had the smallest.\n\nage_gaps %>% pull(age_difference) %>% range()\n\n[1]  0 52\n\nage_gaps %>% filter(age_difference==52)\n\n# A tibble: 1 × 13\n  movie_name     relea…¹ direc…² age_d…³ coupl…⁴ actor…⁵ actor…⁶ chara…⁷ chara…⁸\n  <chr>            <dbl> <chr>     <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>  \n1 Harold and Ma…    1971 Hal As…      52       1 Ruth G… Bud Co… woman   man    \n# … with 4 more variables: actor_1_birthdate <date>, actor_2_birthdate <date>,\n#   actor_1_age <dbl>, actor_2_age <dbl>, and abbreviated variable names\n#   ¹​release_year, ²​director, ³​age_difference, ⁴​couple_number, ⁵​actor_1_name,\n#   ⁶​actor_2_name, ⁷​character_1_gender, ⁸​character_2_gender\n\nage_gaps %>% filter(age_difference==0)\n\n# A tibble: 30 × 13\n   movie_name    relea…¹ direc…² age_d…³ coupl…⁴ actor…⁵ actor…⁶ chara…⁷ chara…⁸\n   <chr>           <dbl> <chr>     <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>  \n 1 10 Things I …    1999 Gil Ju…       0       2 Joseph… Larisa… man     woman  \n 2 A Happening …    2017 Judy G…       0       2 Common  Jennif… man     woman  \n 3 A Simple Fav…    2018 Paul F…       0       2 Henry … Blake … man     woman  \n 4 American Hus…    2013 David …       0       3 Christ… Amy Ad… man     woman  \n 5 American Pie     1999 Paul W…       0       4 Mena S… Chris … woman   man    \n 6 Blue Valenti…    2010 Derek …       0       1 Michel… Ryan G… woman   man    \n 7 Catch Me If …    2002 Steven…       0       1 Amy Ad… Leonar… woman   man    \n 8 Chicago          2002 Rob Ma…       0       2 Renee … Domini… woman   man    \n 9 Daddy's Litt…    2007 Tyler …       0       1 Idris … Gabrie… man     woman  \n10 Empire           2002 Franc.…       0       2 Denise… Peter … woman   man    \n# … with 20 more rows, 4 more variables: actor_1_birthdate <date>,\n#   actor_2_birthdate <date>, actor_1_age <dbl>, actor_2_age <dbl>, and\n#   abbreviated variable names ¹​release_year, ²​director, ³​age_difference,\n#   ⁴​couple_number, ⁵​actor_1_name, ⁶​actor_2_name, ⁷​character_1_gender,\n#   ⁸​character_2_gender\n\n\nThe movie with the age difference of 52 was Harold and Maude released in 1971. However there were 30 movies where the age difference was not even an entire year."
  },
  {
    "objectID": "visualization_exercise.html",
    "href": "visualization_exercise.html",
    "title": "Visualization Exercise",
    "section": "",
    "text": "The graph I settled on to replicate plots different colleges’ fight songs by duration in seconds and beats per minute. I found this graph on fivethiryeight.com at this link https://projects.fivethirtyeight.com/college-fight-song-lyrics/ and the raw data at this link https://github.com/fivethirtyeight/data/tree/master/fight-songs. Here is a quick screenshot of the original graph since it is slightly interactive, but if you would like to view it in its full glory then check out the link above. \nLoad packages\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.4.0      ✔ purrr   1.0.1 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.1      ✔ stringr 1.5.0 \n✔ readr   2.1.3      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(readr)\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\nThe following object is masked from 'package:stats':\n\n    filter\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(shiny)\n\nLoad in data\n\nfight <- read_csv(\"data/fight-songs.csv\")\n\nRows: 65 Columns: 23\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (19): school, conference, song_name, writers, year, student_writer, offi...\ndbl  (4): bpm, sec_duration, number_fights, trope_count\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nPlotting\n\n##create the plot with parameters and average lines\nPlot1 <- ggplot(fight, aes(x=sec_duration, y=bpm, col=school, text= paste(school, \"<br>\")))+\n  geom_point(size=3, alpha=0.8)+\n  xlab(\"Duration\")+ylab(\"Beats Per Minute\")+\n  geom_hline(yintercept = mean(fight$bpm, na.rm=TRUE), lty='dotted')+\n  geom_vline(xintercept= mean(fight$sec_duration, na.rm=TRUE), lty='dotted')+\n  scale_colour_hue(c=20, l=80)+theme(legend.position=\"none\")+\n  scale_x_continuous(limits= c(0,180), breaks = seq(0,180,20))+\n  scale_y_continuous(limits= c(50,200), breaks= c(0,60,80,100,120,140,160,180,200))+\n  theme(axis.title.y = element_text(face=\"bold\", size=11), plot.title = element_text(face=\"bold\", size=14.5, hjust=0.5), axis.title.x = element_text(face=\"bold\", size=11))+\n  ggtitle(\"How Colleges' Fight Songs Stack Up\")+\n  annotate(\"text\", x = 140, y = 190, label = \"Fast but long\")+\n  annotate(\"text\", x = 30, y = 190, label = \"Fast and short\")+\n  annotate(\"text\", x = 30, y = 50, label = \"Slow but short\")+\n  annotate(\"text\", x = 140, y = 50, label = \"Slow and Long\")+\n   theme(panel.background = element_rect(fill = 'white'),\n          panel.grid.major = element_line(color = 'grey'),\n          panel.grid.minor = element_line(color = 'grey'))+\n  annotate(\"text\", x=140, y=130, label=\"AVERAGE\", size=3)+\n  annotate(\"text\", x=71, y=100, label=\"AVERAGE\", angle=90, size=3)\nPlot1\n\n\n\n\nI started with plotting the basic parameters and then started tweaking things to make them more similar to the original. I started with the point size and transparency, then added axis labels and the average lines for bpm and duration. I altered the scale of both axes, added the title, changed the font, and added quadrant labels as well. Lastly I changed the background grid to how the original looked. As I was going along, I would view the graph and see how it was looking, then add to the code. I can see how this may be harder to follow than if I broke it down into separate steps.\nAdding the Hovering Text Box\n\n##create the hover text box\nggplotly(Plot1, tooltip = c(\"text\"))\n\n\n\n\n\nComments\nStackoverflow was my best friend during this process and I would’ve been lost without it. I came into this exercise with a basic understanding of making plots but I didn’t know all the ways to customize the different aspects of a graph or any sort of interactive elements, and it was my first time trying to use ggplotly. I definitely learned a ton of details for personalization and formatting which took the majority of the time I spent on it. I had a difficult time figuring out what color palette was used in the original so I settled for the default colors which were fairly similar. I also couldn’t figure out how to add the labels of ‘AVERAGE’ within the dotted average lines I made, so I just added them adjacent to the lines. This was defintely a challenge but I feel like I learned a lot and found a bunch of new resources I can turn to in the future."
  }
]